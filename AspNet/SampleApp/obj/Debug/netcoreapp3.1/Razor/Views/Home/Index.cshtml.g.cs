#pragma checksum "A:\Programming\DevExtreme\Examples\DataGrid-How-to-implement-a-custom-editing-form-using-dxForm-and-dxPopup\AspNet\SampleApp\SampleApp\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "632873c0dcf71a4b063eda43af2c346ebb66a677"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(SampleApp.Models.Home.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace SampleApp.Models.Home
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "A:\Programming\DevExtreme\Examples\DataGrid-How-to-implement-a-custom-editing-form-using-dxForm-and-dxPopup\AspNet\SampleApp\SampleApp\Views\_ViewImports.cshtml"
using SampleApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "A:\Programming\DevExtreme\Examples\DataGrid-How-to-implement-a-custom-editing-form-using-dxForm-and-dxPopup\AspNet\SampleApp\SampleApp\Views\_ViewImports.cshtml"
using DevExtreme.AspNet.Mvc;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "A:\Programming\DevExtreme\Examples\DataGrid-How-to-implement-a-custom-editing-form-using-dxForm-and-dxPopup\AspNet\SampleApp\SampleApp\Views\Home\Index.cshtml"
using SampleApp.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"632873c0dcf71a4b063eda43af2c346ebb66a677", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"47d7d76fe970a0d7fb21f5de1f0693685216e8e1", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/customPopupHelper.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n<h2 class=\"content-block\">Home</h2>\r\n\r\n");
#nullable restore
#line 5 "A:\Programming\DevExtreme\Examples\DataGrid-How-to-implement-a-custom-editing-form-using-dxForm-and-dxPopup\AspNet\SampleApp\SampleApp\Views\Home\Index.cshtml"
Write(Html.DevExtreme().DataGrid()
    .DataSource(new JS("source"))
    .KeyExpr(new JS("key"))
    .Editing(e => e
        .AllowUpdating(true)
        .AllowAdding(true)
        .AllowDeleting(true)
        .UseIcons(true)
        .Mode(GridEditMode.Popup)
    )
    .OnToolbarPreparing("onToolbarPreparing")
    .Columns(columns => {
        columns.Add().DataField("ID");
        columns.Add().DataField("CompanyName");
        columns.Add().DataField("Zipcode");
        columns.Add().DataField("Website");
        columns.Add()
            .Type(GridCommandColumnType.Buttons)
            .Buttons(b =>
            {
                b.Add()
                    .Name("edit")
                    .OnClick("onClickEdit");

                b.Add().Name("delete");
            });
    })
    .OnInitialized("onDataGridInitialized")
);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
#nullable restore
#line 34 "A:\Programming\DevExtreme\Examples\DataGrid-How-to-implement-a-custom-editing-form-using-dxForm-and-dxPopup\AspNet\SampleApp\SampleApp\Views\Home\Index.cshtml"
Write(Html.DevExtreme().Popup()
    .ID("popup")
    .ContentTemplate(new TemplateName("customPopupContentTemplate"))
    .ToolbarItems(i =>
    {
        i.Add()
            .Widget(i => i.Button()
                .Text("Confirm")
                .Type(ButtonType.Success)
                .OnClick("onConfirmClick")
            )
            .Location(ToolbarItemLocation.After)
            .Toolbar(Toolbar.Bottom);
        i.Add()
            .Widget(i => i.Button()
                .Text("Cancel")
                .Type(ButtonType.Success)
                .OnClick("onCancelClick")
            )
            .Location(ToolbarItemLocation.After)
            .Toolbar(Toolbar.Bottom);
    })
    .OnInitialized("onPopupInitialized")
);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n");
#nullable restore
#line 59 "A:\Programming\DevExtreme\Examples\DataGrid-How-to-implement-a-custom-editing-form-using-dxForm-and-dxPopup\AspNet\SampleApp\SampleApp\Views\Home\Index.cshtml"
 using (Html.DevExtreme().NamedTemplate("customPopupContentTemplate"))
{
    

#line default
#line hidden
#nullable disable
#nullable restore
#line 61 "A:\Programming\DevExtreme\Examples\DataGrid-How-to-implement-a-custom-editing-form-using-dxForm-and-dxPopup\AspNet\SampleApp\SampleApp\Views\Home\Index.cshtml"
Write(Html.DevExtreme().Form()
        .LabelLocation(FormLabelLocation.Top)
        .ShowColonAfterLabel(true)
        .FormData(new JS("rowData"))
        .ColCountByScreen(c => c
            .Lg(2)
            .Md(2)
            .Sm(1)
            .Xs(1)
        )
        .Items(i =>
        {
            i.AddSimple()
                .DataField("ID")
                .ValidationRules(v => v.AddRequired());

            i.AddSimple()
                .DataField("CompanyName")
                .ValidationRules(v => v.AddRequired());

            i.AddSimple()
                .DataField("Zipcode")
                .ValidationRules(v => v.AddRequired());

            i.AddSimple()
                .DataField("Website")
                .ValidationRules(v => v.AddRequired());
        })
        .OnInitialized("onFormInitialized")
    );

#line default
#line hidden
#nullable disable
#nullable restore
#line 90 "A:\Programming\DevExtreme\Examples\DataGrid-How-to-implement-a-custom-editing-form-using-dxForm-and-dxPopup\AspNet\SampleApp\SampleApp\Views\Home\Index.cshtml"
     
}

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "632873c0dcf71a4b063eda43af2c346ebb66a6777927", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script>
    let source = [{
        ""ID"": 1,
        ""CompanyName"": ""Super Mart of the West"",
        ""Zipcode"": 72716,
        ""Website"": ""http://www.nowebsitesupermart.com""
    }, {
        ""ID"": 2,
        ""CompanyName"": ""Electronics Depot"",
        ""Zipcode"": 30339,
        ""Website"": ""http://www.nowebsitedepot.com""
    }, {
        ""ID"": 3,
        ""CompanyName"": ""K&S Music"",
        ""Zipcode"": 55403,
        ""Website"": ""http://www.nowebsitemusic.com""
    }];

    let key = ""ID"";
    let rowData = {};
    let mode = """";

    // TODO: change comment to widget instances
    // popup instance
    let popup = undefined;
    let grid = undefined;
    let form = undefined;

    // TODO: Change to onGridInitialized
    function onDataGridInitialized(e) {
        grid = e.component;
    }

    function onPopupInitialized(e) {
        popup = e.component;
    }

    function onFormInitialized(e) {
        form = e.component;
    }

    function onToolbarPreparing(e) {
");
            WriteLiteral(@"        let toolbarItems = e.toolbarOptions.items;

        // customize addRow toolbar button
        toolbarItems.forEach((item) => {
            if (item.name === ""addRowButton"") {
                item.options.onClick = onClickAdd
            }
        });
    }

    function onClickEdit(e) {
        showPopup(""Edit"", e.row.data)
    }

    function onClickAdd(e) {
        showPopup(""Add"", undefined)
    }

    function onConfirmClick() {
        // get form instance by querying for Form

        if (mode === ""Edit"") {
            let result = form.validate();
            if (result.isValid) {
                let data = form.option(""formData"");

                let gridSource = grid.getDataSource();
                gridSource.store()
                    .push([{ type: ""update"", data: data, key: data[key] }]);
                gridSource.reload();

                popup.hide();
            }
        } else if (mode === ""Add"") {
            let result = form.validate();
    ");
            WriteLiteral(@"        if (result.isValid) {
                let data = form.option(""formData"");

                let gridSource = grid.getDataSource();
                gridSource.store()
                    .push([{type: ""insert"", data: data}]);
                gridSource.reload();

                popup.hide();
            }
        }
    }

    function onCancelClick() {
        popup.hide();
    }

    function showPopup(popupMode, data) {
        mode = popupMode;
        popup.option(""title"", popupMode);

        if (form)
            form.option('formData', { ...data })
        else {
            if (popupMode === ""Add"")
                rowData = { ...data };
            else if (popupMode === ""Edit"")
                rowData = { ...data };
        }

        popup.show();
    }
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
